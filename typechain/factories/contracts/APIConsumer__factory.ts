/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  APIConsumer,
  APIConsumerInterface,
} from "../../contracts/APIConsumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_jobId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "ChainlinkRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "volume",
        type: "uint256",
      },
    ],
    name: "DataFullfilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_volume",
        type: "uint256",
      },
    ],
    name: "fulfill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestVolumeData",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "volume",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "withdrawLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405260016004553480156200001657600080fd5b5060405162001c8338038062001c8383398181016040528101906200003c9190620002a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000875762000081620000e760201b60201c565b62000099565b62000098816200017f60201b60201c565b5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260a081815250508160c081815250505050505062000347565b6200017d73c89bd4e1632d3a43cb03aaad5262cbe4038bc57173ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200014b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000171919062000315565b6200017f60201b60201c565b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f582620001c8565b9050919050565b6200020781620001e8565b81146200021357600080fd5b50565b6000815190506200022781620001fc565b92915050565b6000819050919050565b62000242816200022d565b81146200024e57600080fd5b50565b600081519050620002628162000237565b92915050565b6000819050919050565b6200027d8162000268565b81146200028957600080fd5b50565b6000815190506200029d8162000272565b92915050565b60008060008060808587031215620002c057620002bf620001c3565b5b6000620002d08782880162000216565b9450506020620002e38782880162000251565b9350506040620002f6878288016200028c565b9250506060620003098782880162000216565b91505092959194509250565b6000602082840312156200032e576200032d620001c3565b5b60006200033e8482850162000216565b91505092915050565b60805160a05160c05161190c6200037760003960006103a50152600061021701526000610383015261190c6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634357855e146100515780636021abac1461006d57806390e9ca7f1461008b578063c618a1e4146100a7575b600080fd5b61006b60048036038101906100669190610fc8565b6100c5565b005b61007561020f565b6040516100829190611017565b60405180910390f35b6100a560048036038101906100a09190611090565b6103d0565b005b6100af6104d8565b6040516100bc91906110cc565b60405180910390f35b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015e9061116a565b60405180910390fd5b6005600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055807f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a60405160405180910390a2816006819055507f221d507243adddffe789060be0e69bff4be830996c6b265bfda5083d86f8863260065460405161020291906110cc565b60405180910390a1505050565b6000806102447f000000000000000000000000000000000000000000000000000000000000000030634357855e60e01b6104de565b90506102a86040518060400160405280600381526020017f676574000000000000000000000000000000000000000000000000000000000081525060405180608001604052806049815260200161188e604991398361050f9092919063ffffffff16565b6103276040518060400160405280600481526020017f70617468000000000000000000000000000000000000000000000000000000008152506040518060400160405280601881526020017f5241572c4554482c5553442c564f4c554d453234484f555200000000000000008152508361050f9092919063ffffffff16565b6000670de0b6b3a7640000905061037e6040518060400160405280600581526020017f74696d657300000000000000000000000000000000000000000000000000000081525082846105429092919063ffffffff16565b6103c97f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000610575565b9250505090565b60006103da610641565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb838373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104329190611199565b602060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047391906111c9565b6040518363ffffffff1660e01b81526004016104909291906111f6565b6020604051808303816000875af11580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d39190611257565b505050565b60065481565b6104e6610ed0565b6104ee610ed0565b6105058585858461066b909392919063ffffffff16565b9150509392505050565b61052682846080015161071b90919063ffffffff16565b61053d81846080015161071b90919063ffffffff16565b505050565b61055982846080015161071b90919063ffffffff16565b61057081846080015161074090919063ffffffff16565b505050565b600080600454905060018161058a91906112b3565b6004819055506000634042994660e01b60008087600001513089604001518760018c60800151600001516040516024016105cb9897969594939291906113b2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050610636868386846107ed565b925050509392505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610673610ed0565b6106838560800151610100610982565b508385600001818152505082856020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508185604001907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681525050849050949350505050565b61072882600383516109ec565b61073b8183610b7190919063ffffffff16565b505050565b7fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000811215610777576107728282610b93565b6107e9565b67ffffffffffffffff811315610796576107918282610c0a565b6107e8565b600081126107af576107aa826000836109ec565b6107e7565b6107e6826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6107e19190611441565b6109ec565b5b5b5b5050565b6000308460405160200161080292919061153d565b604051602081830303815290604052805190602001209050846005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af960405160405180910390a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea08685856040518463ffffffff1660e01b81526004016108f893929190611569565b6020604051808303816000875af1158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190611257565b61097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190611619565b60405180910390fd5b949350505050565b61098a610f3d565b60006020836109999190611668565b146109c5576020826109ab9190611668565b60206109b79190611699565b826109c291906112b3565b91505b81836020018181525050604051808452600081528281016020016040525082905092915050565b60178167ffffffffffffffff1611610a2357610a1d8160058460ff16901b60ff161784610c5690919063ffffffff16565b50610b6c565b60ff8167ffffffffffffffff1611610a7957610a52601860058460ff16901b1784610c5690919063ffffffff16565b50610a738167ffffffffffffffff16600185610c769092919063ffffffff16565b50610b6b565b61ffff8167ffffffffffffffff1611610ad057610aa9601960058460ff16901b1784610c5690919063ffffffff16565b50610aca8167ffffffffffffffff16600285610c769092919063ffffffff16565b50610b6a565b63ffffffff8167ffffffffffffffff1611610b2957610b02601a60058460ff16901b1784610c5690919063ffffffff16565b50610b238167ffffffffffffffff16600485610c769092919063ffffffff16565b50610b69565b610b46601b60058460ff16901b1784610c5690919063ffffffff16565b50610b678167ffffffffffffffff16600885610c769092919063ffffffff16565b505b5b5b5b505050565b610b79610f3d565b610b8b83846000015151848551610c98565b905092915050565b610bb160036005600660ff16901b1783610c5690919063ffffffff16565b50610c0682827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610be29190611441565b604051602001610bf291906110cc565b604051602081830303815290604052610d87565b5050565b610c2860026005600660ff16901b1783610c5690919063ffffffff16565b50610c528282604051602001610c3e91906110cc565b604051602081830303815290604052610d87565b5050565b610c5e610f3d565b610c6e8384600001515184610dac565b905092915050565b610c7e610f3d565b610c8f848560000151518585610e02565b90509392505050565b610ca0610f3d565b8251821115610cae57600080fd5b84602001518285610cbf91906112b3565b1115610cf457610cf3856002610ce488602001518887610cdf91906112b3565b610e90565b610cee91906116cd565b610eac565b5b600080865180518760208301019350808887011115610d135787860182525b60208701925050505b60208410610d5a5780518252602082610d3591906112b3565b9150602081610d4491906112b3565b9050602084610d539190611699565b9350610d1c565b60006001856020036101000a03905080198251168184511681811785525050508692505050949350505050565b610d9482600283516109ec565b610da78183610b7190919063ffffffff16565b505050565b610db4610f3d565b83602001518310610dda57610dd98460028660200151610dd491906116cd565b610eac565b5b83518051602085830101848153818603610df5576001820183525b5050508390509392505050565b610e0a610f3d565b84602001518483610e1b91906112b3565b1115610e4357610e428560028685610e3391906112b3565b610e3d91906116cd565b610eac565b5b6000600183610100610e559190611842565b610e5f9190611699565b90508551838682010185831982511617815281518588011115610e825784870182525b505085915050949350505050565b600081831115610ea257829050610ea6565b8190505b92915050565b600082600001519050610ebf8383610982565b50610eca8382610b71565b50505050565b6040518060a0016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001610f37610f3d565b81525090565b604051806040016040528060608152602001600081525090565b600080fd5b6000819050919050565b610f6f81610f5c565b8114610f7a57600080fd5b50565b600081359050610f8c81610f66565b92915050565b6000819050919050565b610fa581610f92565b8114610fb057600080fd5b50565b600081359050610fc281610f9c565b92915050565b60008060408385031215610fdf57610fde610f57565b5b6000610fed85828601610f7d565b9250506020610ffe85828601610fb3565b9150509250929050565b61101181610f5c565b82525050565b600060208201905061102c6000830184611008565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105d82611032565b9050919050565b61106d81611052565b811461107857600080fd5b50565b60008135905061108a81611064565b92915050565b6000602082840312156110a6576110a5610f57565b5b60006110b48482850161107b565b91505092915050565b6110c681610f92565b82525050565b60006020820190506110e160008301846110bd565b92915050565b600082825260208201905092915050565b7f536f75726365206d75737420626520746865206f7261636c65206f662074686560008201527f2072657175657374000000000000000000000000000000000000000000000000602082015250565b60006111546028836110e7565b915061115f826110f8565b604082019050919050565b6000602082019050818103600083015261118381611147565b9050919050565b61119381611052565b82525050565b60006020820190506111ae600083018461118a565b92915050565b6000815190506111c381610f9c565b92915050565b6000602082840312156111df576111de610f57565b5b60006111ed848285016111b4565b91505092915050565b600060408201905061120b600083018561118a565b61121860208301846110bd565b9392505050565b60008115159050919050565b6112348161121f565b811461123f57600080fd5b50565b6000815190506112518161122b565b92915050565b60006020828403121561126d5761126c610f57565b5b600061127b84828501611242565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112be82610f92565b91506112c983610f92565b92508282019050808211156112e1576112e0611284565b5b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61131c816112e7565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561135c578082015181840152602081019050611341565b60008484015250505050565b6000601f19601f8301169050919050565b600061138482611322565b61138e818561132d565b935061139e81856020860161133e565b6113a781611368565b840191505092915050565b6000610100820190506113c8600083018b61118a565b6113d5602083018a6110bd565b6113e26040830189611008565b6113ef606083018861118a565b6113fc6080830187611313565b61140960a08301866110bd565b61141660c08301856110bd565b81810360e08301526114288184611379565b90509998505050505050505050565b6000819050919050565b600061144c82611437565b915061145783611437565b925082820390508181126000841216828213600085121516171561147e5761147d611284565b5b92915050565b6000819050919050565b60006114a96114a461149f84611032565b611484565b611032565b9050919050565b60006114bb8261148e565b9050919050565b60006114cd826114b0565b9050919050565b60008160601b9050919050565b60006114ec826114d4565b9050919050565b60006114fe826114e1565b9050919050565b611516611511826114c2565b6114f3565b82525050565b6000819050919050565b61153761153282610f92565b61151c565b82525050565b60006115498285611505565b6014820191506115598284611526565b6020820191508190509392505050565b600060608201905061157e600083018661118a565b61158b60208301856110bd565b818103604083015261159d8184611379565b9050949350505050565b7f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f726160008201527f636c650000000000000000000000000000000000000000000000000000000000602082015250565b60006116036023836110e7565b915061160e826115a7565b604082019050919050565b60006020820190508181036000830152611632816115f6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061167382610f92565b915061167e83610f92565b92508261168e5761168d611639565b5b828206905092915050565b60006116a482610f92565b91506116af83610f92565b92508282039050818111156116c7576116c6611284565b5b92915050565b60006116d882610f92565b91506116e383610f92565b92508282026116f181610f92565b9150828204841483151761170857611707611284565b5b5092915050565b60008160011c9050919050565b6000808291508390505b60018511156117665780860481111561174257611741611284565b5b60018516156117515780820291505b808102905061175f8561170f565b9450611726565b94509492505050565b60008261177f576001905061183b565b8161178d576000905061183b565b81600181146117a357600281146117ad576117dc565b600191505061183b565b60ff8411156117bf576117be611284565b5b8360020a9150848211156117d6576117d5611284565b5b5061183b565b5060208310610133831016604e8410600b84101617156118115782820a90508381111561180c5761180b611284565b5b61183b565b61181e848484600161171c565b9250905081840481111561183557611834611284565b5b81810290505b9392505050565b600061184d82610f92565b915061185883610f92565b92506118857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461176f565b90509291505056fe68747470733a2f2f6d696e2d6170692e63727970746f636f6d706172652e636f6d2f646174612f70726963656d756c746966756c6c3f6673796d733d455448267473796d733d555344a2646970667358221220d9901aea7786fef331efed6af37bcb7f4a80a07f9b865f4c6aed900c318ab27864736f6c63430008110033";

type APIConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APIConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APIConsumer__factory extends ContractFactory {
  constructor(...args: APIConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<APIConsumer> {
    return super.deploy(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    ) as Promise<APIConsumer>;
  }
  override getDeployTransaction(
    _oracle: PromiseOrValue<string>,
    _jobId: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    _link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _oracle,
      _jobId,
      _fee,
      _link,
      overrides || {}
    );
  }
  override attach(address: string): APIConsumer {
    return super.attach(address) as APIConsumer;
  }
  override connect(signer: Signer): APIConsumer__factory {
    return super.connect(signer) as APIConsumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APIConsumerInterface {
    return new utils.Interface(_abi) as APIConsumerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APIConsumer {
    return new Contract(address, _abi, signerOrProvider) as APIConsumer;
  }
}
